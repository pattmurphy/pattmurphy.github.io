{"version":3,"sources":["Components/films.js","Components/people.js","Components/planets.js","Components/species.js","Components/starships.js","Components/vehicles.js","App.js","serviceWorker.js","index.js"],"names":["Films","state","films","getFilms","_callee","len","i","_this2","this","regenerator_default","a","wrap","_context","prev","next","push","axios","get","concat","catch","err","console","warn","Promise","all","then","response","filmList","map","res","undefined","data","setState","stop","componentDidMount","_ref2","_this","count","renderFilms","film","react_default","createElement","title","episode_id","director","producer","release_date","opening_crawl","className","Component","People","people","getPeople","personList","renderPeople","person","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","Planets","planets","getPlanets","planetList","renderPlanets","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","Species","species","getSpecies","speciesList","renderSpecies","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","Starships","starships","getStarships","starshipList","renderStarships","starship","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","Vehicles","vehicles","getVehicles","vehicleList","renderVehicles","vehicle","vehicle_class","App","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","subject","handleFilmsClick","bind","assertThisInitialized","handlePeopleClick","handlePlanetsClick","handleSpeciesClick","handleStarshipsClick","handleVehiclesClick","table","films_Films","people_People","planets_Planets","species_Species","starships_Starships","vehicles_Vehicles","onClick","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b218452.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Films extends Component {\r\n\r\n  state = {\r\n    films: []\r\n  };\r\n\r\n  getFilms = async function(len){\r\n    var films = [];\r\n    for(var i = 1; i <= len; i++){\r\n      films.push(axios.get(`https://swapi.dev/api/films/${i}/`)\r\n                    .catch(err => console.warn(err))\r\n      );\r\n    }\r\n    Promise.all(films).then( (response) => {\r\n      let filmList = [];\r\n      response.map(res => {\r\n        if(res !== undefined){\r\n          filmList.push(res.data);\r\n        }\r\n      })\r\n      this.setState({films: filmList});\r\n    })\r\n  }\r\n\r\ncomponentDidMount = () => {\r\n    axios.get(`https://swapi.dev/api/films/`)\r\n      .then( ({data}) => {\r\n        this.getFilms(data.count);\r\n      })\r\n      .catch(err => console.warn(err))\r\n  }\r\n\r\n  renderFilms = () => {\r\n    let films = this.state.films.map(film =>\r\n      <tr>\r\n        <td>{film.title}</td>\r\n        <td>{film.episode_id}</td>\r\n        <td>{film.director}</td>\r\n        <td>{film.producer}</td>\r\n        <td>{film.release_date}</td>\r\n        <td>{film.opening_crawl}</td>\r\n      </tr>\r\n    )\r\n    return(films)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\"><strong>Films</strong></h2>\r\n        <table className=\"table table-dark\">\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Episode Number</th>\r\n            <th>Director</th>\r\n            <th>Producer</th>\r\n            <th>Release</th>\r\n            <th>Opening Text</th>\r\n          </tr>\r\n          {this.renderFilms()}\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class People extends Component {\r\n\r\n  state = {\r\n    people: []\r\n  };\r\n\r\n  getPeople = async function(len){\r\n    var people = [];\r\n    for(var i = 1; i <= len; i++){\r\n      people.push(axios.get(`https://swapi.dev/api/people/${i}`)\r\n                    .catch(err => console.warn(err))\r\n      );\r\n    }\r\n    Promise.all(people).then( (response) => {\r\n      let personList = [];\r\n      response.map(res => {\r\n        if(res !== undefined){\r\n          personList.push(res.data);\r\n        }\r\n      })\r\n      this.setState({people: personList});\r\n    })\r\n  }\r\n\r\ncomponentDidMount = () => {\r\n    axios.get(`https://swapi.dev/api/people`)\r\n      .then( ({data}) => {\r\n        this.getPeople(data.count);\r\n      })\r\n      .catch(err => console.warn(err))\r\n  }\r\n\r\n  renderPeople = () => {\r\n    let people = this.state.people.map(person =>\r\n      <tr>\r\n        <td>{person.name}</td>\r\n        <td>{person.height}</td>\r\n        <td>{person.mass}</td>\r\n        <td>{person.hair_color}</td>\r\n        <td>{person.skin_color}</td>\r\n        <td>{person.eye_color}</td>\r\n        <td>{person.birth_year}</td>\r\n        <td>{person.gender}</td>\r\n      </tr>\r\n    )\r\n    return(people)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\"><strong>People</strong></h2>\r\n        <table className=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Height</th>\r\n            <th>Mass</th>\r\n            <th>Hair Colour</th>\r\n            <th>Skin Colour</th>\r\n            <th>Eye Colour</th>\r\n            <th>Birth Year</th>\r\n            <th>Gender</th>\r\n          </tr>\r\n          {this.renderPeople()}\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Planets extends Component {\r\n\r\n  state = {\r\n    planets: []\r\n  };\r\n\r\n  getPlanets = async function(len){\r\n    var planets = [];\r\n    for(var i = 1; i <= len; i++){\r\n      planets.push(axios.get(`https://swapi.dev/api/planets/${i}`)\r\n                    .catch(err => console.warn(err))\r\n      );\r\n    }\r\n    Promise.all(planets).then( (response) => {\r\n      let planetList = [];\r\n      response.map(res => {\r\n        if(res !== undefined){\r\n          planetList.push(res.data);\r\n        }\r\n      })\r\n      this.setState({planets: planetList});\r\n    })\r\n  }\r\n\r\ncomponentDidMount = () => {\r\n    axios.get(`https://swapi.dev/api/planets`)\r\n      .then( ({data}) => {\r\n        this.getPlanets(data.count);\r\n      })\r\n      .catch(err => console.warn(err))\r\n  }\r\n\r\n  renderPlanets = () => {\r\n    let planets = this.state.planets.map(planet =>\r\n      <tr>\r\n        <td>{planet.name}</td>\r\n        <td>{planet.rotation_period}</td>\r\n        <td>{planet.orbital_period}</td>\r\n        <td>{planet.diameter}</td>\r\n        <td>{planet.climate}</td>\r\n        <td>{planet.gravity}</td>\r\n        <td>{planet.terrain}</td>\r\n        <td>{planet.surface_water}</td>\r\n        <td>{planet.population}</td>\r\n      </tr>\r\n    )\r\n    return(planets)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\"><strong>Planets</strong></h2>\r\n        <table className=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Rotation Period</th>\r\n            <th>Orbital Period</th>\r\n            <th>Diameter</th>\r\n            <th>Climate</th>\r\n            <th>Gravity</th>\r\n            <th>Terrain</th>\r\n            <th>Surface Water</th>\r\n            <th>Population</th>\r\n          </tr>\r\n          {this.renderPlanets()}\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Species extends Component {\r\n\r\n  state = {\r\n    species: []\r\n  };\r\n\r\n  getSpecies = async function(len){\r\n    var species = [];\r\n    for(var i = 1; i <= len; i++){\r\n      species.push(axios.get(`https://swapi.dev/api/species/${i}`)\r\n                    .catch(err => console.warn(err))\r\n      );\r\n    }\r\n    Promise.all(species).then( (response) => {\r\n      let speciesList = [];\r\n      response.map(res => {\r\n        if(res !== undefined){\r\n          speciesList.push(res.data);\r\n        }\r\n      })\r\n      this.setState({species: speciesList});\r\n    })\r\n  }\r\n\r\ncomponentDidMount = () => {\r\n    axios.get(`https://swapi.dev/api/species`)\r\n      .then( ({data}) => {\r\n        this.getSpecies(data.count);\r\n      })\r\n      .catch(err => console.warn(err))\r\n  }\r\n\r\n  renderSpecies = () => {\r\n    let species = this.state.species.map(species =>\r\n      <tr>\r\n        <td>{species.name}</td>\r\n        <td>{species.classification}</td>\r\n        <td>{species.designation}</td>\r\n        <td>{species.average_height}</td>\r\n        <td>{species.skin_colors}</td>\r\n        <td>{species.hair_colors}</td>\r\n        <td>{species.eye_colors}</td>\r\n        <td>{species.average_lifespan}</td>\r\n        <td>{species.language}</td>\r\n      </tr>\r\n    )\r\n    return(species)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\"><strong>Species</strong></h2>\r\n        <table className=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Classification</th>\r\n            <th>Designation</th>\r\n            <th>Average Height</th>\r\n            <th>Skin Colors</th>\r\n            <th>Hair Colors</th>\r\n            <th>Eye Colors</th>\r\n            <th>Average Lifespan</th>\r\n            <th>Language</th>\r\n          </tr>\r\n          {this.renderSpecies()}\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Starships extends Component {\r\n\r\n  state = {\r\n    starships: []\r\n  };\r\n\r\n  getStarships = async function(len){\r\n    var starships = [];\r\n    for(var i = 1; i <= len; i++){\r\n      starships.push(axios.get(`https://swapi.dev/api/starships/${i}`)\r\n                    .catch(err => console.warn(err))\r\n      );\r\n    }\r\n    Promise.all(starships).then( (response) => {\r\n      let starshipList = [];\r\n      response.map(res => {\r\n        if(res !== undefined){\r\n          starshipList.push(res.data);\r\n        }\r\n      })\r\n      this.setState({starships: starshipList});\r\n    })\r\n  }\r\n\r\ncomponentDidMount = () => {\r\n    axios.get(`https://swapi.dev/api/starships`)\r\n      .then( ({data}) => {\r\n        this.getStarships(data.count);\r\n      })\r\n      .catch(err => console.warn(err))\r\n  }\r\n\r\n  renderStarships = () => {\r\n    let starships = this.state.starships.map(starship =>\r\n      <tr>\r\n        <td>{starship.name}</td>\r\n        <td>{starship.model}</td>\r\n        <td>{starship.manufacturer}</td>\r\n        <td>{starship.cost_in_credits}</td>\r\n        <td>{starship.length}</td>\r\n        <td>{starship.max_atmosphering_speed}</td>\r\n        <td>{starship.crew}</td>\r\n        <td>{starship.passengers}</td>\r\n        <td>{starship.cargo_capacity}</td>\r\n        <td>{starship.consumables}</td>\r\n        <td>{starship.hyperdrive_rating}</td>\r\n        <td>{starship.MGLT}</td>\r\n        <td>{starship.starship_class}</td>\r\n      </tr>\r\n    )\r\n    return(starships)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\"><strong>Starships</strong></h2>\r\n        <table className=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Model</th>\r\n            <th>Manufacturer</th>\r\n            <th>Cost in Credits</th>\r\n            <th>Length</th>\r\n            <th>Max Atmosphering Speed</th>\r\n            <th>Crew</th>\r\n            <th>Passengers</th>\r\n            <th>Cargo Capacity</th>\r\n            <th>Consumables</th>\r\n            <th>Hyperdrive Rating</th>\r\n            <th>MGLT</th>\r\n            <th>Starship Class</th>\r\n          </tr>\r\n          {this.renderStarships()}\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Vehicles extends Component {\r\n\r\n  state = {\r\n    vehicles: []\r\n  };\r\n\r\n  getVehicles = async function(len){\r\n    var vehicles = [];\r\n    for(var i = 1; i <= len; i++){\r\n      vehicles.push(axios.get(`https://swapi.dev/api/vehicles/${i}`)\r\n                    .catch(err => console.warn(err))\r\n      );\r\n    }\r\n    Promise.all(vehicles).then( (response) => {\r\n      let vehicleList = [];\r\n      response.map(res => {\r\n        if(res !== undefined){\r\n          vehicleList.push(res.data);\r\n        }\r\n      })\r\n      this.setState({vehicles: vehicleList});\r\n    })\r\n  }\r\n\r\ncomponentDidMount = () => {\r\n    axios.get(`https://swapi.dev/api/vehicles`)\r\n      .then( ({data}) => {\r\n        this.getVehicles(data.count);\r\n      })\r\n      .catch(err => console.warn(err))\r\n  }\r\n\r\n  renderVehicles = () => {\r\n    let vehicles = this.state.vehicles.map(vehicle =>\r\n      <tr>\r\n        <td>{vehicle.name}</td>\r\n        <td>{vehicle.model}</td>\r\n        <td>{vehicle.manufacturer}</td>\r\n        <td>{vehicle.cost_in_credits}</td>\r\n        <td>{vehicle.length}</td>\r\n        <td>{vehicle.max_atmosphering_speed}</td>\r\n        <td>{vehicle.crew}</td>\r\n        <td>{vehicle.passengers}</td>\r\n        <td>{vehicle.cargo_capacity}</td>\r\n        <td>{vehicle.consumables}</td>\r\n        <td>{vehicle.vehicle_class}</td>\r\n      </tr>\r\n    )\r\n    return(vehicles)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\"><strong>Vehicles</strong></h2>\r\n        <table className=\"table table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Model</th>\r\n            <th>Manufacturer</th>\r\n            <th>Cost in Credits</th>\r\n            <th>Length</th>\r\n            <th>Max Atmosphering Speed</th>\r\n            <th>Crew</th>\r\n            <th>Passengers</th>\r\n            <th>Cargo Capacity</th>\r\n            <th>Consumables</th>\r\n            <th>Vehicle Class</th>\r\n          </tr>\r\n          {this.renderVehicles()}\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Films from './Components/films';\nimport People from './Components/people';\nimport Planets from './Components/planets';\nimport Species from './Components/species';\nimport Starships from './Components/starships';\nimport Vehicles from './Components/vehicles';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleFilmsClick = this.handleFilmsClick.bind(this);\n    this.handlePeopleClick = this.handlePeopleClick.bind(this);\n    this.handlePlanetsClick = this.handlePlanetsClick.bind(this);\n    this.handleSpeciesClick = this.handleSpeciesClick.bind(this);\n    this.handleStarshipsClick = this.handleStarshipsClick.bind(this);\n    this.handleVehiclesClick = this.handleVehiclesClick.bind(this);\n  }\n\n  state = {\n    subject: \"\"\n  }\n\n  handleFilmsClick(){\n    this.setState({subject: \"films\"});\n  }\n  handlePeopleClick(){\n    this.setState({subject: \"people\"});\n  }\n  handlePlanetsClick(){\n    this.setState({subject: \"planets\"});\n  }\n  handleSpeciesClick(){\n    this.setState({subject: \"species\"})\n  }\n  handleStarshipsClick(){\n    this.setState({subject: \"starships\"})\n  }\n  handleVehiclesClick(){\n    this.setState({subject: \"vehicles\"})\n  }\n\n  render() {\n    let table;\n    switch(this.state.subject){\n      case \"films\":\n        table = <Films />;\n        break;\n      case \"people\":\n        table = <People />;\n        break;\n      case \"planets\":\n        table = <Planets />;\n        break;\n      case \"species\":\n        table = <Species />;\n        break;\n      case \"starships\":\n        table = <Starships />\n        break;\n      case \"vehicles\":\n        table = <Vehicles />\n        break;\n      default:\n        table = <h3 className=\"display\">Pick a topic from the links at the top of your screen \n          to see information about it.</h3>\n    }\n    return (\n      <div>\n        <ul className=\"nav nav-tabs nav-justified fixed-top\">\n          <li className=\"nav-item\" onClick={this.handleFilmsClick}>\n            <a className=\"nav-link\" href=\"#\">Films</a>\n          </li>\n          <li className=\"nav-item\" onClick={this.handlePeopleClick}>\n            <a className=\"nav-link\" href=\"#\">People</a>\n          </li>\n          <li className=\"nav-item\" onClick={this.handlePlanetsClick}>\n            <a className=\"nav-link\" href=\"#\">Planets</a>\n          </li>\n          <li className=\"nav-item\" onClick={this.handleSpeciesClick}>\n            <a className=\"nav-link\" href=\"#\">Species</a>\n          </li>\n          <li className=\"nav-item\" onClick={this.handleStarshipsClick}>\n            <a className=\"nav-link\" href=\"#\">Starships</a>\n          </li>\n          <li className=\"nav-item\" onClick={this.handleVehiclesClick}>\n            <a className=\"nav-link\" href=\"#\">Vehicles</a>\n          </li>\n        </ul>\n        <h1 className=\"display-2\"><strong>Star Wars Search</strong></h1>\n        <hr></hr>\n        {table}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}